[
  '\x0A',
  '\x0B',
  '\x0C',
  '\x0D',
  '\x20',
  '\u{85}',
  '\u{A0}',
  '\u{1680}',
  '\u{2000}',
  '\u{2001}',
  '\u{2002}',
  '\u{2003}',
  '\u{2004}',
  '\u{2005}',
  '\u{2006}',
  '\u{2007}',
  '\u{2008}',
  '\u{2009}',
  '\u{200A}',
  '\u{2028}',
  '\u{2029}',
  '\u{202F}',
  '\u{205F}',
  '\u{3000}',
];
[
  "",
  r"\",
  "\n",
  "\t",
  "'",
  "\r",
  "\\\n",
  "\\\n ",
  "\\\n \u{a0} x",
  "\\\n  \n  x",
  "spam",
  r"\x0ff",
  r#"\"a"#,
  r"\na",
  r"\ra",
  r"\ta",
  r"\\a",
  r"\'a",
  r"\0a",
  r"\u{0}x",
  r"\u{1F63b}}",
  r"\v",
  r"\üí©",
  r"\‚óè",
  "\\\r",
  r"\x",
  r"\x0",
  r"\xf",
  r"\xa",
  r"\xx",
  r"\x—ã",
  r"\xü¶Ä",
  r"\xtt",
  r"\xff",
  r"\xFF",
  r"\x80",
  r"\u",
  r"\u[0123]",
  r"\u{0x}",
  r"\u{",
  r"\u{0000",
  r"\u{}",
  r"\u{_0000}",
  r"\u{0000000}",
  r"\u{FFFFFF}",
  r"\u{ffffff}",
  r"\u{ffffff}",
  r"\u{DC00}",
  r"\u{DDDD}",
  r"\u{DFFF}",
  r"\u{D800}",
  r"\u{DAAA}",
  r"\u{DBFF}",
  "a",
  r#"\""#,
  r"\n",
  r"\r",
  r"\t",
  r"\\",
  r"\'",
  r"\0",
  r"\x00",
  r"\x5a",
  r"\x5A",
  r"\x7f",
  r"\x80",
  r"\xff",
  r"\xFF",
];
[
  ("a", 'a'),
  ("—ã", '—ã'),
  ("ü¶Ä", 'ü¶Ä'),
  (r#"\""#, '"'),
  (r"\n", '\n'),
  (r"\r", '\r'),
  (r"\t", '\t'),
  (r"\\", '\\'),
  (r"\'", '\''),
  (r"\0", '\0'),
  (r"\x00", '\0'),
  (r"\x5a", 'Z'),
  (r"\x5A", 'Z'),
  (r"\x7f", 127 as char),
  (r"\u{0}", '\0'),
  (r"\u{000000}", '\0'),
  (r"\u{41}", 'A'),
  (r"\u{0041}", 'A'),
  (r"\u{00_41}", 'A'),
  (r"\u{4__1__}", 'A'),
  (r"\u{1F63b}", 'üòª'),
  b"a\xF0\t",
  b'\xF0',
  br"a\n",
  b'a',
  b'\n',
  b'\r',
  b'\t',
  b'\\',
  b'\'',
  b'\"',
  b'\0',
  b'\xF0',
  b"a\n\r\t\\\'\"\0\xF0",
  br###"a"##b"###,
  b"a\"##b",
  &1u16,
  0xffffffff,
  !0 as u32,
  4294967295,
  !0 as u32,
  0xffffffffffffffff,
  !0 as u64,
  18446744073709551615,
  !0 as u64,
  (-2147483648i32).wrapping_sub(1),
  2147483647,
  -3.40282356e38_f32,
  f32::MIN,
  3.40282356e38_f32,
  f32::MAX,
  -1.7976931348623158e308_f64,
  f64::MIN,
  1.7976931348623158e308_f64,
  f64::MAX,
  !0xf0_isize & 0xff,
  0xf0_isize | 0xf,
  0xf_isize << 4,
  0xf0_isize >> 4,
  -16 >> 2,
  0b1010_1010_isize | 0b0101_0101,
  (-1000isize as usize) >> 3_usize,
  2305843009213693827_usize,
  &42i32,
  a.0 - 1,
  a.0.1..2,
  (0).b0,
  '\u{10__FFFF}',
  "\u{10_F0FF__}foo\u{1_0_0_0__}",
];

a!("\0=");

let _: f64 = 0.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333;
let _: f64 = 1234567890123456789012345678901234567890e-340;

fn main() {
  let s = "string
literal";

  let s = "literal with \
             escaped newline";

  let s = r"string
literal";
  let s = br"byte string
literal";
  let text = "foo\r\nbar\n\nbaz\n";
  let val = !(
    (|(..): (_, _), __ @ _| __)((&*"\\", 'ü§î') /**/, {}) ==
    ({
      &[..=..][..];
    })
  ); //
}

(100).toString();

0;
1;

0.1;
(1.1).1;
1.0;

0b1;
0B1;
0o1;
0O1;
0x1;
0X1;

0x123abcdef456abcdef;
0X123abcdef456ABCDEF;
0xdeadbeef;

0b111000;
0b000111;
0B111000;
0B000111;
0o111000;
0o000111;
0O111000;
0O000111;
0x111000;
0x000111;
0X111000;
0X000111;

1e1;
1e1;
1e-1;
(1).e1.1;
e1;
1.1e1;
(1.1e10).1;
e + (0010).1;
e - 0010;

1e1;
1e1;
1e-1;
(1).E1.1;
E1;
1.1e1;
(1.1e10).1;
E + (0010).1;
E - 0010;

0.5;
0.5;
0.5;
0.5;
0.5;
0.5;

1;
1.005;
1.0;
1.5;
1.5;
0;
0.005;
0.0;
(0.0).0;
500600.001230045;
1.005e60;
1.0e60;
0.005e60;
0.0e60;
(0.0e60).0;
e60;
(0).e60;
0e60;
500600.001230045e60;
10;
9700;
10e100;

1_1;
1_1.1_1;
0o1_1;
0o0_11;
1.1_0_1e1;
(1.1_0_1e1).1;
_1;
0x1_1;
0xa_1;
0xa_1;
0b01_1;
0b0_1_1;
// source: "../../../ext/jinx-rust/tests/samples/expressions/literal.rs"